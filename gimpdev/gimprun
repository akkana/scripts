#! /bin/bash

# This script lets you run a GIMP you built yourself, and allows for
# several different GIMPs in different prefixes inside a base prefix.

# Make a link to this file named gimp-$version, e.g. gimp-master to
# run git master (currently 2.99), gimp-2.10 to run that version, etc.

# So, for example, inside a base prefix of $HOME/run/ you might
# have a GIMP 2.99 built with a prefix of $HOME/run/gimp-2.99,
# and another GIMP from git's master branch with a prefix of
# $HOME/run/gimp-2.99.

# Then you can have multiple symbolic links to this script in your
# bin directory naemd for the specific GIMP builds.
# For instance, name one gimp-2.10 and another gimp-master.
# The name of the executable will be used as the prefix directory
# inside BASE_PREFIX, and will also be used as the name of the
# GIMP executable to run -- with the special case that "gimp-master"
# will try to run an executable named "gimp-3.0".

# Set the path to your base prefix here, if it's different:
BASE_PREFIX=$HOME/run


GIMPEX=$(basename $0)
GIMP_PREFIX=$BASE_PREFIX/$GIMPEX
echo "prefix:", $GIMP_PREFIX

# Set mandatory enviroment variables
export PATH=$GIMP_PREFIX/bin:$PATH
export LD_LIBRARY_PATH=$GIMP_PREFIX/lib:$LD_LIBRARY_PATH

# GIMP master needs XDG_DATA_DIRS, but 2.10 breaks if you include it..
if [[ $GIMPEX == *master ]]; then
  echo 'MASTER'
  if [[ x$XDG_DATA_DIRS == x ]]; then
      export XDG_DATA_DIRS=$GIMP_PREFIX/share:/usr/local/share:/usr/share
  else
      export XDG_DATA_DIRS=$GIMP_PREFIX/share:$XDG_DATA_DIRS
  fi
  echo XDG_DATA_DIRS $XDG_DATA_DIRS
fi

# Shouldn't be need for gimp, but Might be for things like plug-ins
export PKG_CONFIG_PATH=$GIMP_PREFIX/lib/pkgconfig:$PKG_CONFIG_PATH

# If GIMPEX is gimp-master, change it to GIMP 3.0.
if [ $GIMPEX = 'gimp-master' ]; then
  GIMPEX=gimp-3.0
fi

echo PATH $PATH
echo LD_LIBRARY_PATH $LD_LIBRARY_PATH
echo PKG_CONFIG_PATH $PKG_CONFIG_PATH

# Run GIMP, passing along any command-line arguments.
echo "Running:" $GIMP_PREFIX/bin/$GIMPEX $@
$GIMP_PREFIX/bin/$GIMPEX $@
